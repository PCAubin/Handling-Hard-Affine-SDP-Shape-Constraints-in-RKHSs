% The code below allow to plot the numerical result for the 
% catenary experiment of the article
% P.-C. Aubin-Frankowski, Z. Szabo "Handling Hard Affine SDP Shape
% Constraints in RKHSs ", JMLR 2022
% The code takes a table (to be saved in .mat) generated by
% main_Catenary_SoapBubble.m.

load(['Catenary_G8_L5_I39_halfspaces.mat'])
TDeltaEta_cellmat_hyper=TDeltaEta_cellmat;
load(['Catenary_G8_L5_I41_balls.mat'])
TDeltaEta_cellmat_ball=TDeltaEta_cellmat;

load('noSoapBubbleResults_balls'); load('noSoapBubbleResults_hyp');
%%
%TDeltaEta_cellmat_hyper: TED, listT, A, distance to cons, consIdx, cputime, optval
Len_arr_hyper = cellfun('length', TDeltaEta_cellmat_hyper(:,4));
Len_arr_hyper=Len_arr_hyper(1:end-1);
Time_arr_hyper = cell2mat(TDeltaEta_cellmat_hyper(:,6));
cumTime_arr_hyper=cumsum(Time_arr_hyper);
Vals_arr_hyper = cell2mat(TDeltaEta_cellmat_hyper(:,7));
Delta_arr_hyper = cell2mat(cellfun(@min, TDeltaEta_cellmat_hyper(:,1),'UniformOutput',false));
Delta_arr_hyper=Delta_arr_hyper(:,2);

Len_arr_ball = nonzeros(cellfun('length', TDeltaEta_cellmat_ball(:,4)));
Time_arr_ball = cell2mat(TDeltaEta_cellmat_ball(:,6));
cumTime_arr_ball=cumsum(Time_arr_ball);
Vals_arr_ball = nonzeros(cell2mat(TDeltaEta_cellmat_ball(:,7)));

nbPoints_arr=noSoapBubbleResults_balls(:,3);
Time_arr_ball_woSoap = noSoapBubbleResults_balls(:,2);
Vals_arr_ball_woSoap = noSoapBubbleResults_balls(:,1);

nbPoints_hyp=noSoapBubbleResults_hyp(:,3);
Time_arr_hyper_woSoap = noSoapBubbleResults_hyp(:,2);
Vals_arr_hyper_woSoap = noSoapBubbleResults_hyp(:,1);
%%
close all
% figure
% hold on
% plot(Len_arr_hyper,Vals_arr_hyper,'b',Len_arr_ball,Vals_arr_ball,'r','LineWidth',2)
% plot(nbPoints_arr,Vals_arr_hyper_woSoap,'--b',nbPoints_arr,Vals_arr_ball_woSoap,'--r','LineWidth',2)
% lgd=legend([{'Soap bubble with halfspaces'};{'Soap bubble with balls'};...
%     {'Covering with halfspaces'};{'Covering with balls'}],'Interpreter','latex');
% lgd.Location='northeast'; xlabel({'Number of added points ($M$)'},'Interpreter','latex'); 
% ylabel({'Optimal value ($v_{app}$)'},'Interpreter','latex')
% fig = gcf; fig.PaperPositionMode = 'auto';
% fig_pos = fig.PaperPosition; fig.PaperSize = [fig_pos(3) fig_pos(4)];
% print(fig,'Catenary_MvsVal','-dpdf')

% figure
% hold on
% plot(Len_arr_hyper,Time_arr_hyper,'b',Len_arr_ball,Time_arr_ball,'r','LineWidth',2)
% plot(nbPoints_arr,Time_arr_hyper_woSoap,'--b',nbPoints_arr,Time_arr_ball_woSoap,'--r','LineWidth',2)
% plot(20:1:320,54*([20:1:320]/220).^(3.5),'k','LineWidth',2)
% lgd=legend([{'Soap bubble with halfspaces'};{'Soap bubble with balls'};...
%     {'Covering with halfspaces'};{'Covering with balls'};{'function $t\mapsto t^{3.5}$'}],'Interpreter','latex');
% lgd.Location='northwest'; xlabel({'Number of added points ($M$)'},'Interpreter','latex'); 
% ylabel({'Computation time ($s$)'},'Interpreter','latex')
% xlim([20 320])
% fig = gcf; fig.PaperPositionMode = 'auto';
% fig_pos = fig.PaperPosition; fig.PaperSize = [fig_pos(3) fig_pos(4)];
% print(fig,'Catenary_MvsT','-dpdf')

trueOptval=1.5446;
figure
semilogy(Len_arr_hyper,Vals_arr_hyper-trueOptval,'b',Len_arr_ball,Vals_arr_ball-trueOptval,'r',...
    nbPoints_arr,Vals_arr_hyper_woSoap-trueOptval,'--b',nbPoints_arr,Vals_arr_ball_woSoap-trueOptval,'--r','LineWidth',2)
lgd=legend([{'Soap bubble with half-spaces'};{'Soap bubble with balls'};...
    {'Covering with half-spaces'};{'Covering with balls'}],'Interpreter','latex','FontSize',12);
lgd.Location='northeast'; 
xlabel({'Number of added points ($M$)'},'Interpreter','latex','FontSize',14); 
ylabel({'Distance to optimum ($v_{app} - \bar{v}$)'},'Interpreter','latex','FontSize',14)
axis tight
% fig = gcf; fig.PaperPositionMode = 'auto';
% fig_pos = fig.PaperPosition; fig.PaperSize = [fig_pos(3) fig_pos(4)];
% print(fig,'Catenary_MvsDiffVal','-dpdf')

figure
loglog(Vals_arr_hyper-trueOptval,cumTime_arr_hyper,'b',Vals_arr_ball-trueOptval,cumTime_arr_ball,'r',...
    Vals_arr_hyper_woSoap-trueOptval,Time_arr_hyper_woSoap,'--b',Vals_arr_ball_woSoap-trueOptval,Time_arr_ball_woSoap,'--r','LineWidth',2)

lgd=legend([{'Soap bubble with half-spaces'};{'Soap bubble with balls'};...
    {'Covering with half-spaces'};{'Covering with balls'}],'Interpreter','latex','FontSize',12);
lgd.Location='southeast'; 
xlabel({'Distance to optimum ($v_{app} - \bar{v}$)'},'Interpreter','latex','FontSize',14); 
ylabel({'Computation time ($s$)'},'Interpreter','latex','FontSize',14)
xlim([0.02 0.118])
set(gca, 'XDir','reverse')
% axis tight
% fig = gcf; fig.PaperPositionMode = 'auto';
% fig_pos = fig.PaperPosition; fig.PaperSize = [fig_pos(3) fig_pos(4)];
% print(fig,'Catenary_DiffValvsT','-dpdf')
%%
ntest=400+3; gridT=linspace(0,1,ntest);
hlap = @(u,lbda) exp(-lbda * abs(u)); h=hlap; lbda=5;
xinit=0; xend=xinit; xmid=1.5; xcons=0.5; tconsInit=0.2; tconsEnd=0.8;
DltaInit=0.01; ListTconsInit=unique([tconsInit+DltaInit:2*DltaInit:tconsEnd-DltaInit,tconsEnd-DltaInit]);
ncons=length(ListTconsInit); etaInit=sqrt(2*(1-hlap(DltaInit,lbda)));
TDeltaEta_matInit=[ListTconsInit',repmat(DltaInit,ncons,1),repmat(etaInit,ncons,1)]; 
listTcons=[0 0.5 1]; gamma=0.8;

listTInit=[listTcons,ListTconsInit]; nInit=length(listTInit);
nbIter=3;

figure%catenary plot
clf
hold on
j=2;
n=length(TDeltaEta_cellmat{j-1,2});
    GXtest=h(repmat(gridT',1,n)-repmat(TDeltaEta_cellmat{j-1,2},ntest,1),lbda);
    plot(gridT,GXtest*TDeltaEta_cellmat{j-1,3},'LineWidth',2);
for j=3:nbIter
    n=length(TDeltaEta_cellmat{j-1,2});
    GXtest=h(repmat(gridT',1,n)-repmat(TDeltaEta_cellmat{j-1,2},ntest,1),lbda);
    plot(gridT,GXtest*TDeltaEta_cellmat{j-1,3},'LineWidth',2,'HandleVisibility','off');%
end
% plot(gridT,h(repmat(gridT',1,3)-repmat(listTcons,ntest,1),lbda)*...
%     [-0.123962752391322;1.52035096471891;-0.123962752391322],'--k','LineWidth',2)
listTbest=[listTcons,tconsInit,tconsEnd];
plot(gridT,h(repmat(gridT',1,5)-repmat(listTbest,ntest,1),lbda)*...
    [-0.212729546285170;1.422365853473533;-0.212729546285170;0.252224879594389;0.252224879594389],'k','LineWidth',2)
% stairs([0 tconsInit tconsEnd 1]',[xinit xcons xend xend]','b','LineWidth',1);
ylim([xinit xmid])

h=area([xcons xcons],...
    'XData',[tconsInit tconsEnd],'BaseValue',0,'ShowBaseLine',0,'LineStyle','none');
h.FaceColor = [0.7 0.7 0.7];
h.FaceAlpha = 0.8;

xlabel({'$x$'},'Interpreter','latex','FontSize',14); ylabel({'$y$'},'Interpreter','latex','FontSize',14)
lgd=legend([{'Soap bubble iterates'};{'Optimal solution'};{'Constraints'}],'Interpreter','latex','FontSize',12);
lgd.Location='northwest';
% fig = gcf; fig.PaperPositionMode = 'auto';
% fig_pos = fig.PaperPosition; fig.PaperSize = [fig_pos(3) fig_pos(4)];
% print(fig,'Catenary_XvsY','-dpdf')
%%
color_list={[0, 0.4470, 0.7410],[0.8500, 0.3250, 0.0980],[0.9290, 0.6940, 0.1250],...       
    [0.4940, 0.1840, 0.5560],[0.4660, 0.6740, 0.1880],[0.3010, 0.7450, 0.9330],[0.6350, 0.0780, 0.1840]};
figure%balls receding
hold on
xlim([0,1]); 
set(gca, 'YDir','reverse')
facTor=40;
yticks([1:nbIter-1]/facTor)
yticklabels(num2str([1:nbIter-1]'))
for j=2:nbIter
    ncons=length(TDeltaEta_cellmat{j-1,1}(:,1));
viscircles([TDeltaEta_cellmat{j-1,1}(:,1),repmat(j-1,ncons,1)/facTor],TDeltaEta_cellmat{j-1,1}(:,2),'Color','blue');
viscircles([TDeltaEta_cellmat{j-1,5}(:,1),repmat(j-1,size(TDeltaEta_cellmat{j-1,5},1),1)/facTor],TDeltaEta_cellmat{j-1,5}(:,2),'Color','red');
plot([0.85 0.95],[repmat(j-1,2,1)/facTor],'LineWidth',5,'Color',color_list{j-1})
end
axis tight
xlim([0 1])
xlabel({'$x$'},'Interpreter','latex','FontSize',14); ylabel({'$Iteration$'},'Interpreter','latex','FontSize',14)
% fig = gcf; fig.PaperPositionMode = 'auto';
% fig_pos = fig.PaperPosition; fig.PaperSize = [fig_pos(3) fig_pos(4)];
% print(fig,'Catenary_XvsIter','-dpdf')
%%
figure%log-ball receding
hold on
xlim([0,1]); 
% set(gca, 'YDir','reverse')
for j=2:nbIter
    [tmpT,sortIdx]=sort(TDeltaEta_cellmat{j-1,1}(:,1));
plot(tmpT,log2(TDeltaEta_cellmat{j-1,1}(sortIdx,2)),'LineWidth',2);
end
xlabel({'$x$'},'Interpreter','latex'); ylabel({'$\log_2(\delta_m)$'},'Interpreter','latex')
% fig = gcf; fig.PaperPositionMode = 'auto';
% fig_pos = fig.PaperPosition; fig.PaperSize = [fig_pos(3) fig_pos(4)];
% print(fig,'Catenary_XvsLogDlta','-dpdf')
%%


trueOptval=1.5446;
figure
semilogy(Len_arr_hyper,Vals_arr_hyper-trueOptval,Len_arr_ball,Vals_arr_ball-trueOptval,'LineWidth',2)
lgd=legend([{'Soap bubble with halfspaces'};{'Soap bubble with balls'}],'Interpreter','latex');
lgd.Location='northeast'; xlabel({'Number of added points ($M$)'},'Interpreter','latex'); 
ylabel({'Distance to optimum ($v_{app} - \bar{v}$)'},'Interpreter','latex')
% fig = gcf; fig.PaperPositionMode = 'auto';
% fig_pos = fig.PaperPosition; fig.PaperSize = [fig_pos(3) fig_pos(4)];
% print(fig,'Catenary_MvsDiffVal','-dpdf')

figure
loglog(Vals_arr_hyper-trueOptval,Time_arr_hyper,Vals_arr_ball-trueOptval,Time_arr_ball,'LineWidth',2)
set(gca, 'XDir','reverse')
lgd=legend([{'Soap bubble with halfspaces'};{'Soap bubble with balls'}],'Interpreter','latex');
lgd.Location='northwest'; xlabel({'Distance to optimum ($v_{app} - \bar{v}$)'},'Interpreter','latex'); 
ylabel({'Computation time ($s$)'},'Interpreter','latex')
% fig = gcf; fig.PaperPositionMode = 'auto';
% fig_pos = fig.PaperPosition; fig.PaperSize = [fig_pos(3) fig_pos(4)];
% print(fig,'Catenary_DiffValvsT','-dpdf')